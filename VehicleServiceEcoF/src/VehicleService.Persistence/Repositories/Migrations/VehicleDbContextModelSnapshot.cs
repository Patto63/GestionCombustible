// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleService.Persistence;

#nullable disable

namespace VehicleService.Persistence.Repositories.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    partial class VehicleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleService.Domain.Entities.EstadoOperacionalVehiculo", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EstadoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoId"));

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RegistradoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("EstadoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("EstadoOperacionalVehiculo", (string)null);

                    b.HasData(
                        new
                        {
                            EstadoId = 1,
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Estado = "Activo",
                            FechaInicio = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Motivo = "Vehículo puesto en servicio inicial",
                            RegistradoPor = "Sistema",
                            VehiculoId = 1
                        });
                });

            modelBuilder.Entity("VehicleService.Domain.Entities.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MarcaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarcaId"));

                    b.Property<DateTime>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MarcaId");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Marcas", (string)null);

                    b.HasData(
                        new
                        {
                            MarcaId = 1,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Toyota"
                        },
                        new
                        {
                            MarcaId = 2,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Honda"
                        },
                        new
                        {
                            MarcaId = 3,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Chevrolet"
                        });
                });

            modelBuilder.Entity("VehicleService.Domain.Entities.Modelo", b =>
                {
                    b.Property<int>("ModeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ModeloId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModeloId"));

                    b.Property<DateTime>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<decimal>("ConsumoEstandar")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PorcentajeTolerancia")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("TipoCombustible")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ModeloId");

                    b.HasIndex("MarcaId", "Nombre")
                        .IsUnique();

                    b.ToTable("Modelos", (string)null);

                    b.HasData(
                        new
                        {
                            ModeloId = 1,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Año = 2023,
                            ConsumoEstandar = 6.5m,
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descripcion = "Sedán compacto",
                            MarcaId = 1,
                            Nombre = "Corolla",
                            PorcentajeTolerancia = 10.0m,
                            TipoCombustible = "Gasolina"
                        },
                        new
                        {
                            ModeloId = 2,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Año = 2023,
                            ConsumoEstandar = 7.0m,
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descripcion = "Sedán deportivo",
                            MarcaId = 2,
                            Nombre = "Civic",
                            PorcentajeTolerancia = 12.0m,
                            TipoCombustible = "Gasolina"
                        },
                        new
                        {
                            ModeloId = 3,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Año = 2023,
                            ConsumoEstandar = 12.0m,
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descripcion = "Camioneta pickup",
                            MarcaId = 3,
                            Nombre = "Silverado",
                            PorcentajeTolerancia = 15.0m,
                            TipoCombustible = "Diesel"
                        });
                });

            modelBuilder.Entity("VehicleService.Domain.Entities.TipoVehiculo", b =>
                {
                    b.Property<int>("TipoVehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoVehiculoId"));

                    b.Property<DateTime>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoMaquinariaVehiculoId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TipoMaquinaria");

                    b.HasKey("TipoVehiculoId");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TiposVehiculo", (string)null);

                    b.HasData(
                        new
                        {
                            TipoVehiculoId = 1,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descripcion = "Vehículo de transporte personal",
                            Nombre = "Automóvil",
                            TipoMaquinariaVehiculoId = "Ligera"
                        },
                        new
                        {
                            TipoVehiculoId = 2,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descripcion = "Vehículo de dos ruedas",
                            Nombre = "Motocicleta",
                            TipoMaquinariaVehiculoId = "Ligera"
                        },
                        new
                        {
                            TipoVehiculoId = 3,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descripcion = "Vehículo de carga pesada",
                            Nombre = "Camión",
                            TipoMaquinariaVehiculoId = "Pesada"
                        });
                });

            modelBuilder.Entity("VehicleService.Domain.Entities.Vehiculo", b =>
                {
                    b.Property<int>("VehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VehiculoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiculoId"));

                    b.Property<DateTime>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int>("AñoFabricacion")
                        .HasColumnType("int");

                    b.Property<decimal>("CapacidadCombustible")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("CapacidadMotor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaProximoMantenimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimoMantenimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModeloId")
                        .HasColumnType("int");

                    b.Property<decimal>("OdometroActual")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("OdometroInicial")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoMaquinaria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("VehiculoId");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("ModeloId");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.HasIndex("TipoId");

                    b.ToTable("Vehiculos", (string)null);

                    b.HasData(
                        new
                        {
                            VehiculoId = 1,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            AñoFabricacion = 2023,
                            CapacidadCombustible = 45.0m,
                            CapacidadMotor = "1.8L",
                            Codigo = "VH-2024-001",
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Estado = "Activo",
                            FechaCompra = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModeloId = 1,
                            OdometroActual = 1500m,
                            OdometroInicial = 0m,
                            Placa = "ABC-123",
                            TipoId = 1,
                            TipoMaquinaria = "Ligera"
                        });
                });

            modelBuilder.Entity("VehicleService.Domain.Entities.EstadoOperacionalVehiculo", b =>
                {
                    b.HasOne("VehicleService.Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany("EstadosOperacionales")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("VehicleService.Domain.Entities.Modelo", b =>
                {
                    b.HasOne("VehicleService.Domain.Entities.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("VehicleService.Domain.Entities.Vehiculo", b =>
                {
                    b.HasOne("VehicleService.Domain.Entities.Modelo", "Modelo")
                        .WithMany("Vehiculos")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VehicleService.Domain.Entities.TipoVehiculo", "Tipo")
                        .WithMany("Vehiculos")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Modelo");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("VehicleService.Domain.Entities.Marca", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("VehicleService.Domain.Entities.Modelo", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("VehicleService.Domain.Entities.TipoVehiculo", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("VehicleService.Domain.Entities.Vehiculo", b =>
                {
                    b.Navigation("EstadosOperacionales");
                });
#pragma warning restore 612, 618
        }
    }
}
