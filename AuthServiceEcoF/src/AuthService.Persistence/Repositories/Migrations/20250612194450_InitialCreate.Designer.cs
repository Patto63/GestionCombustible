// <auto-generated />
using System;
using AuthService.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthService.Persistence.Repositories.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20250612194450_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthService.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<DateTime>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RolId");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descripcion = "Acceso total al sistema",
                            Nombre = "Administrador"
                        },
                        new
                        {
                            RolId = 2,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descripcion = "Control limitado de módulos",
                            Nombre = "Operador"
                        },
                        new
                        {
                            RolId = 3,
                            ActualizadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CreadoEn = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descripcion = "Supervisa sin modificar",
                            Nombre = "Supervisor"
                        });
                });

            modelBuilder.Entity("AuthService.Domain.Entities.RolUsuario", b =>
                {
                    b.Property<int>("RolUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolUsuarioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolUsuarioId"));

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("RolUsuarioId");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioId", "RolId")
                        .IsUnique();

                    b.ToTable("RolesUsuario", (string)null);
                });

            modelBuilder.Entity("AuthService.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<DateTime>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<string>("HashContrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UltimoAcceso")
                        .HasColumnType("datetime2");

                    b.HasKey("UsuarioId");

                    b.HasIndex("CorreoElectronico")
                        .IsUnique();

                    b.HasIndex("NombreUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("AuthService.Domain.Entities.RolUsuario", b =>
                {
                    b.HasOne("AuthService.Domain.Entities.Rol", "Rol")
                        .WithMany("RolesUsuario")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthService.Domain.Entities.Usuario", "Usuario")
                        .WithMany("RolesUsuario")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AuthService.Domain.Entities.Rol", b =>
                {
                    b.Navigation("RolesUsuario");
                });

            modelBuilder.Entity("AuthService.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("RolesUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
